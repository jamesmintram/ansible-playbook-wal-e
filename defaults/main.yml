---
# defaults file for wal_e

wal_e_packages:
  - daemontools
  - libevent-dev
  - libxslt-dev
  - lzop
  - postgresql-client
  - pv
  - python-dev
  - python-setuptools
  - python-pip

wal_e_pips:
  - argparse
  - boto
  - envdir
  - gevent
  - requests
  - six

wal_e_version: 0.9.2

# wal-e < 1.0.0 needs python2.7
# wal-e >= 1.0.0 needs python3.4
#
# Set wal_e_virtualenv_python_version if the system python version
# is not compatible with the wal-e version and if you want to use virtualenv.
#
# If not set, wal-e will be installed with defaults system pip and python.
# If wal_e_version is 1.0.0 => wal_e_virtualenv_python_version must be "python3.4"
wal_e_virtualenv_python_version: ""
wal_e_virtualenv_path: "/usr/wal_e_{{ wal_e_virtualenv_python_version }}_virtual_env"

wal_e_envdir: '/etc/wal-e'

wal_e_base_backup_disabled: false
wal_e_base_backup_minute:   '0'
wal_e_base_backup_hour:     '0'
wal_e_base_backup_day:      '*'
wal_e_base_backup_month:    '*'
wal_e_base_backup_weekday:  '1'

wal_e_base_backup_options: ''

wal_e_backup_delete_disabled: false
wal_e_backup_delete_minute:   '0'
wal_e_backup_delete_hour:     '0'
wal_e_backup_delete_day:      '*'
wal_e_backup_delete_month:    '*'
wal_e_backup_delete_weekday:  '*'

wal_e_backup_delete_retain: '5'

wal_e_user: 'postgres'
wal_e_group: 'postgres'
wal_e_pgdata_dir: '/var/lib/postgresql/9.1/main/'

#wal_e_s3_prefix: 's3://some-bucket/directory/or/whatever'

# Set it to true to enable IAM instance profiles.
# More info: https://github.com/wal-e/wal-e#using-aws-iam-instance-profiles
#
# If enabled, wal_e_aws_access_key will be ignored
wal_e_aws_instance_profile: false

# AWS credentials.
# Recommended store this using ansible-vault (http://docs.ansible.com/playbooks_vault.html)
#wal_e_aws_access_key:
#wal_e_aws_secret_key:
